// astro-engine.js

// Placeholder for KP-based calculation engine // In future, integrate NASA ephemeris or Swiss Ephemeris

function generateKPChart(data) { const { name, dob, tob, location } = data;

// Simulated output - replace with real logic later const chartData = { sun: { sign: "Gemini", degree: "15Â°30'", nakshatra: "Ardra", subLord: "Venus" }, moon: { sign: "Libra", degree: "02Â°12'", nakshatra: "Swati", subLord: "Mercury" }, lagna: { sign: "Virgo", degree: "18Â°10'", nakshatra: "Hasta", subLord: "Moon" } };

return chartData; }

// Event binding function setupForm() { const form = document.querySelector("form"); form.addEventListener("submit", function (e) { e.preventDefault();

const inputs = form.querySelectorAll("input");
const data = {
  name: inputs[0].value,
  dob: inputs[1].value,
  tob: inputs[2].value,
  location: inputs[3].value
};

const chart = generateKPChart(data);
displayChart(chart);

}); }

// Display results function displayChart(chart) { const container = document.createElement("div"); container.className = "mt-6 p-4 border rounded bg-white shadow"; container.innerHTML = <h3 class="text-lg font-bold text-indigo-700 mb-2">ðŸ”® KP Sub-lord Chart Result</h3> <ul class="list-disc pl-5 text-gray-700"> <li><strong>Sun:</strong> ${chart.sun.sign} ${chart.sun.degree} â€“ Nakshatra: ${chart.sun.nakshatra} (Sub: ${chart.sun.subLord})</li> <li><strong>Moon:</strong> ${chart.moon.sign} ${chart.moon.degree} â€“ Nakshatra: ${chart.moon.nakshatra} (Sub: ${chart.moon.subLord})</li> <li><strong>Lagna:</strong> ${chart.lagna.sign} ${chart.lagna.degree} â€“ Nakshatra: ${chart.lagna.nakshatra} (Sub: ${chart.lagna.subLord})</li> </ul>;

document.querySelector(".max-w-4xl").appendChild(container); }

// Initialize setupForm();

